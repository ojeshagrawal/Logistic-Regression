# 🏭 Product Mix Optimization – Factory Model Explanation (Q2)

This document explains the linear programming model developed for optimizing the product mix of three textile products—**Bloom**, **Amber**, and **Leaf**—using **Cotton**, **Wool**, and **Nylon** as raw materials.

---

## 📌 Problem Statement

A company produces three final products:
- Bloom
- Amber
- Leaf

Each product is composed of three raw materials:
- Cotton
- Wool
- Nylon

The goal is to **maximize total profit**, considering:
- Cost and revenue of raw materials  
- Proportion constraints  
- Product demand limitations

---

## 🧮 Variables

Let `xij` represent the quantity (in tons) of material `i` used in product `j`, where:

- `i` ∈ {1: Cotton, 2: Wool, 3: Nylon}  
- `j` ∈ {1: Bloom, 2: Amber, 3: Leaf}

### Decision Variables:
- `x11`, `x12`, `x13`: Cotton in Bloom, Amber, Leaf  
- `x21`, `x22`, `x23`: Wool in Bloom, Amber, Leaf  
- `x31`, `x32`, `x33`: Nylon in Bloom, Amber, Leaf

---

## 🎯 Objective Function

**Profit = Sales Price – Production Cost – Purchase Price**

### Final Simplified Objective Function:
Maximize: 15x11 + 10x12 + 25x13 + 11x21 + 6x22 + 21x23 + 15x31 + 10x32 + 25x33

---

## 📏 Constraints

### 1. **Demand Constraints**
x11 + x21 + x31 ≤ 4200 (Bloom) 
x12 + x22 + x32 ≤ 3200 (Amber) 
x13 + x23 + x33 ≤ 3500 (Leaf)

### 2. **Proportion Constraints**

#### Cotton Composition
- Bloom: `2x11 ≥ x11 + x21 + x31`
- Amber: `0.4x12 − 0.6x22 − 0.6x23 ≥ 0`
- Leaf: `0.6x13 − 0.4x23 − 0.4x33 ≥ 0`

#### Wool Composition
- Bloom: `0.6x21 − 0.4x11 − 0.4x31 ≥ 0`
- Amber: `0.6x22 − 0.4x12 − 0.4x32 ≥ 0`
- Leaf: `0.7x23 − 0.3x13 − 0.3x33 ≥ 0`

### 3. **Non-Negativity & Integer Constraints**
All xij ≥ 0 and xij must be integers


---

## 💻 Model Implementation in R

The LP model was implemented using the `lpSolveAPI` package in R.

Steps followed in `ojesh-code.R`:
- Defined 9 decision variables and 9 constraints.
- Set objective coefficients using `set.objfn()`.
- Set row constraints using `set.row()`.
- RHS values added with `set.rhs()`, and types using `set.constr.type()`.
- Set integer and non-negative bounds.
- Solved with `solve()`, and results extracted using `get.objective()` and `get.variables()`.

---

## ✅ Optimal Solution

The LP model outputs the **maximum profit** and optimal quantities for each decision variable.

### 💰 Maximum Profit:
**$83,160**

### 🏗️ Production Plan:
x11 = 2520 (Cotton in Bloom) 
x21 = 1920 (Wool in Bloom) 
x31 = 0 (Nylon in Bloom) 
x12 = 1680 (Cotton in Amber) 
x22 = 1280 (Wool in Amber) 
x32 = 0 (Nylon in Amber) 
x13 = 0 (Cotton in Leaf) 
x23 = 0 (Wool in Leaf) 
x33 = 0 (Nylon in Leaf)


> **Only Bloom and Amber are produced; Leaf is excluded from the optimal solution.**

---

## 📌 Conclusion

The Linear Programming model provides a clear decision-making strategy for maximizing profit. By producing only Bloom and Amber, and not producing Leaf, the factory achieves its highest profitability while satisfying all material and demand constraints.


